%%% set up work directory, install package
cd('/Users/Jeremiah/GitHub/GURLS/gurls/');
% run('./utils/gurls_install.m'); savepath;
addpath('./func/'); savepath;

%%%% 0. testing ground ====
K_train = opt.kernel.K_mkl;
y_train = y_tr;
L1_candid = opt.paramsel.guesses_mkl{1};
eig_app = max(opt.kernel.eig_mkl);

[A_0, epath_trn, norm_path_0] = ...
    rls_dual_mkl_pfbs(...
    K_train, y_train, L1_candid(1), 0, ...
    [], eig_app, 1000, 1e-4, 1);

[A_1, epath_trn, norm_path_1] = ...
    rls_dual_mkl_pfbs(...
    K_train, y_train, L1_candid(10), 0, ...
    [], eig_app, 1000, 1e-4, 1);

plot(1:size(norm_path_0, 2), norm_path_0(51, :),...
    'Color', [0, 0, 0],...
    1:size(norm_path_1, 2), norm_path_1(51, :),...
    'Color', [1, 0, 0])

clf
hold on
for m = 1:M
    plot(1:size(norm_path_0, 2), ...
        norm_path_1(m, :) - norm_path_0(m, :))
end
plot([1, size(norm_path_0, 2)], [0, 0], ...
    '--', 'Color', [0,0,0]);
hold off